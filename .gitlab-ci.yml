stages:
  - create-jira-issue
  - update-gitlab-issue

variables:
  JIRA_BASE_URL: $JIRA_BASE_URL # GitLab CI/CD Variables에 저장
  JIRA_API_TOKEN: $JIRA_API_TOKEN
  JIRA_USER_EMAIL: $JIRA_USER_EMAIL

create-jira-issue:
  stage: create-jira-issue
  script:
    # Jira 이슈 생성
    - echo "Creating Jira Issue..."
    - curl -X POST "$JIRA_BASE_URL/rest/api/3/issue" \
      -H "Authorization: Basic $(echo -n $JIRA_USER_EMAIL:$JIRA_API_TOKEN | base64)" \
      -H "Content-Type: application/json" \
      -d '{
            "fields": {
              "project": {
                "key": "PRJ" # Jira 프로젝트 키
              },
              "summary": "'$CI_JOB_NAME'",
              "description": "GitLab Issue Link: $CI_PROJECT_URL/-/issues/$CI_MERGE_REQUEST_IID",
              "issuetype": {
                "name": "Task"
              }
            }
          }' -o jira_response.json

    # Jira 이슈 키 추출
    - JIRA_KEY=$(cat jira_response.json | jq -r '.key')
    - echo "Jira Issue Key: $JIRA_KEY"

    # GitLab 이슈에 Jira 링크 업데이트
    - echo "Updating GitLab Issue with Jira Link..."
    - curl --header "PRIVATE-TOKEN: $GITLAB_ACCESS_TOKEN" \
      --request PUT \
      --data-urlencode "description=Jira Issue: [$JIRA_KEY]($JIRA_BASE_URL/browse/$JIRA_KEY)" \
      "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues/$CI_MERGE_REQUEST_IID"

create-gitlab-branch:
  stage: update-gitlab-issue
  script:
    # 브랜치명 생성
    - echo "Creating GitLab branch..."
    - BRANCH_NAME="${JIRA_KEY}-$(echo ${CI_JOB_NAME} | sed 's/ /-/g')"
    - git checkout -b "$BRANCH_NAME"
    - git push origin "$BRANCH_NAME"
